62. Search in Rotated Sorted Array

# 第一种方法：可以先找到整个array的minimum，再看target在哪边，再做一次二分



# 第二种方法：和头/尾，target分别比较
class Solution:
    """
    @param A: an integer rotated sorted array
    @param target: an integer to be searched
    @return: an integer
    """
    def search(self, A, target):
        if len(A) == 0:
            return -1
        
        start, end = 0, len(A) - 1
        while start + 1 < end:
            mid = start + (end - start) / 2
            if A[mid] == target:
                return mid
            if A[mid] > A[start]:
                if target >= A[start] and target < A[mid]:
                    end = mid
                else:
                    start = mid
            else:
                if target > A[mid] and target <= A[end]:
                    start = mid
                else:
                    end = mid
                    
        if A[end] == target:
            return end
        if A[start] == target:
            return start
        
        return -1
