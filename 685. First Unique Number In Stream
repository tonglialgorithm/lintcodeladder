685. First Unique Number In Stream
Given a continuous stream of numbers, write a function that returns the first unique number whenever terminating number is reached(include terminating number). If there no unique number before terminating number or you can't find this terminating number, return -1.
Example
Given a stream [1, 2, 2, 1, 3, 4, 4, 5, 6] and a number 5
return 3
Given a stream [1, 2, 2, 1, 3, 4, 4, 5, 6] and a number 7
return -1



class Node:
    def __init__(self, value = None):
        self.val = value
        self.next = None

class DataStream:
    def __init__(self):
        self.hash_numToPrev = {}
        self.duplicates = set()
        self.head = Node(0)
        self.tail = self.head
        
    def remove(self, num):
        prev = self.hash_numToPrev[num]
        prev.next = prev.next.next
        self.hash_numToPrev.pop(num, None)
        
        # change tail and prev of next
        if prev.next != None:
            self.hash_numToPrev[prev.next.val] = prev
        else:
            self.tail = prev
    """
    @param num: next number in stream
    @return: nothing
    """
    def add(self, num):
        if num in self.duplicates:
            return
        if num in self.hash_numToPrev:
            self.remove(num) # to ensure the first node after head node is always the first unique
            self.duplicates.add(num)
        else:
            node = Node(num)
            self.hash_numToPrev[num] = self.tail
            self.tail.next = node
            self.tail = node
            

    """
    @return: the first unique number in stream
    """
    def firstUnique(self):
        if self.head.next != None:
            return self.head.next.val
        return -1

class Solution:
    """
    @param nums: a continuous stream of numbers
    @param number: a number
    @return: returns the first unique number
    """
    def firstUniqueNumber(self, nums, number):
        # Write your code here
        ds = DataStream()
        for i in range(len(nums)):
            ds.add(nums[i])
            if nums[i] == number:
                return ds.firstUnique()
        return -1
