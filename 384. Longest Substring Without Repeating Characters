384. Longest Substring Without Repeating Characters
Given a string, find the length of the longest substring without repeating characters.

Example
For example, the longest substring without repeating letters for "abcabcbb" is "abc", which the length is 3.

For "bbbbb" the longest substring is "b", with the length of 1.

Challenge
O(n) time


class Solution:
    """
    @param s: a string
    @return: an integer
    """
    def lengthOfLongestSubstring(self, s):
        # write your code here
        ans = 0
        map = {}
        j = 0
        for i in range(len(s)):
            while j < len(s) and s[j] not in map:
                map[s[j]] = 1
                ans = max(ans, j - i + 1)
                j += 1
            
            map.pop(s[i], None)
        
        return ans
                
                
        
