531. Six Degrees
Six degrees of separation is the theory that everyone and everything is six or fewer steps away, 
by way of introduction, from any other person in the world, so that a chain of "a friend of a friend" 
statements can be made to connect any two people in a maximum of six steps.

Given a friendship relations, find the degrees of two people, return -1 if they can not been connected 
by friends of friends.        


"""
Definition for Undirected graph node
class UndirectedGraphNode:
    def __init__(self, x):
        self.label = x
        self.neighbors = []
"""


class Solution:
    """
    @param: graph: a list of Undirected graph node
    @param: s: Undirected graph node
    @param: t: Undirected graph nodes
    @return: an integer
    """
    def sixDegrees(self, graph, s, t):
        # write your code here
        degree = {}
        import Queue
        q = Queue.Queue()
        q.put(s)
        degree[s] = 0
        
        while not q.empty():
            node = q.get()
            if node == t:
                return degree[node]
            for y in node.neighbors:
                if y not in degree:
                    degree[y] = degree[node] + 1
                    q.put(y)
        
        return -1
