624. Remove Substrings
Given a string s and a set of n substrings. You are supposed to remove every instance of those n substrings from s so that s is of the minimum length and output this minimum length.

Example
Given s = ccdaabcdbb, substrs = ["ab", "cd"]
Return 2

Explanation:
ccdaabcdbb -> ccdacdbb -> cabb -> cb (length = 2)

把所有可能的删除方法都试一遍，找出最小的长度。
用hashset（这里是record）记录所有得到的string

学习string中find的用法

class Solution:
    """
    @param: s: a string
    @param: dict: a set of n substrings
    @return: the minimum length
    """
    def minLength(self, s, dict):
        # write your code here
        minlen = len(s)
        record = set([s])
        import Queue
        q = Queue.Queue()
        q.put(s)
        
        while not q.empty():
            string = q.get()
            for item in dict:
                found = string.find(item)
                while found != -1:
                    new_s = string[:found] + string[found + len(item):]
                    if new_s not in record:
                        if len(new_s) < minlen:
                            minlen = len(new_s)
                        q.put(new_s)
                        record.add(new_s)
                    
                    found = string.find(item, found + 1)
        
        return minlen
