397. Longest Continuous Increasing Subsequence
Give an integer array，find the longest increasing continuous subsequence in this array.

An increasing continuous subsequence:

Can be from right to left or from left to right.
Indices of the integers in the subsequence should be continuous.
Example
For [5, 4, 2, 1, 3], the LICS is [5, 4, 2, 1], return 4.

For [5, 1, 2, 3, 4], the LICS is [1, 2, 3, 4], return 4.

时间O(n),空间O(1)

class Solution:
    """
    @param A: An array of Integer
    @return: an integer
    """
    def longestIncreasingContinuousSubsequence(self, A):
        # write your code here
        if A is None or len(A) == 0:
            return 0
      
        n = len(A)
        ans = 1
        
        length = 1
        for i in range(1, n):
            if A[i] > A[i - 1]:
                length += 1
            else:
                length = 1
            ans = max(ans, length)
        
        length = 1
        for i in range(n - 2, -1, -1):
            if A[i] > A[i + 1]:
                length += 1
            else:
                length = 1
            ans = max(ans, length)
        
        return ans
