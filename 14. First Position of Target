14. First Position of Target  与上一次类似，只是这一次压缩上界，且验证时候下界优先
 
class Solution:
    """
    @param nums: The integer array.
    @param target: Target to find.
    @return: The first position of target. Position starts from 0.
    """
    def binarySearch(self, nums, target):
        if not nums or target is None:
            return -1
        
        l, r = 0, len(nums) - 1
        
        while l + 1 < r:
            mid = l + (r - l)/2
            if nums[mid] >= target:
                r = mid
            else:
                l = mid
        
        if nums[l] == target:
            return l
        elif nums[r] == target:
            return r
        return -1
