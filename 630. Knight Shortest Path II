630. Knight Shortest Path II

和上一题相似，区别在于起点grid[0][0]和终点都已经给定了grid[-1][-1], 只能走4个方向且只能从左向右走

class Solution:
    """
    @param grid: a chessboard included 0 and 1
    @return: the shortest path
    """
    def shortestPath2(self, grid):
        # write your code here
        if not grid or grid[-1][-1] == 1:
            return -1
        
        row = len(grid)
        col = len(grid[0])
        
        queue = [(0, 0)]
        move = [(1, 2), (-1, 2), (2, 1), (-2, 1)]
        step = 0
        
        while queue:
            size = len(queue)
            for i in range(size):
                x, y = queue.pop(0)
                if x == row - 1 and y == col - 1:
                    return step
                for dx, dy in move:
                    if 0 <= x + dx < row and 0 <= y + dy < col and grid[x + dx][y + dy] == 0:
                        grid[x + dx][y + dy] = 1
                        queue.append((x + dx, y + dy))
            step += 1
        return -1
                
