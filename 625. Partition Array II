和彩虹排序1一样做法

625. Partition Array II
Partition an unsorted integer array into three parts:

The front part < low
The middle part >= low & <= high
The tail part > high
Return any of the possible solutions.

Example
Given [4,3,4,1,2,3,1,2], and low = 2 and high = 3.

Change to [1,1,2,3,2,3,4,4].

([1,1,2,2,3,3,4,4] is also a correct answer, but [1,2,1,2,3,3,4,4] is not)

Challenge
Do it in place.
Do it in one pass (one loop).

class Solution:
    """
    @param: nums: an integer array
    @param: low: An integer
    @param: high: An integer
    @return: 
    """
    def partition2(self, nums, low, high):
        # write your code here
        if nums == None or len(nums) == 0:
            return nums
            
        left, right = 0, len(nums) - 1
        ind = 0
        
        while ind <= right:
            if nums[ind] < low:
                nums[ind], nums[left] = nums[left], nums[ind]
                ind += 1
                left += 1
            elif nums[ind] > high:
                nums[ind], nums[right] = nums[right], nums[ind]
                right -= 1
            else:
                ind += 1
