614. Binary Tree Longest Consecutive Sequence II
Given a binary tree, find the length of the longest consecutive sequence path.
The path could be start and end at any node in the tree

Example
    1
   / \
  2   0
 /
3
Return 4 // 0-1-2-3

595的followup：

"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""

class Solution:
    """
    @param root: the root of binary tree
    @return: the length of the longest consecutive sequence path
    """
    def longestConsecutive2(self, root):
        # write your code here
        maxLen, maxDown, maxUp = self.helper(root)
        return maxLen
    
    def helper(self, root):
        if root == None:
            return 0, 0, 0
        
        leftLen, leftDown, leftUp = self.helper(root.left)
        rightLen, rightDown, rightUp = self.helper(root.right)
        
        down, up = 0, 0
        if root.left is not None and root.val - 1 == root.left.val:
            down = max(down, leftDown + 1)
        if root.left is not None and root.val + 1 == root.left.val:
            up = max(up, leftUp + 1)
        if root.right is not None and root.val - 1 == root.right.val:
            down = max(down, rightDown + 1)
        if root.right is not None and root.val + 1 == root.right.val:
            up = max(up, rightUp + 1)
        
        sumlen = down + up + 1
        sumlen = max(sumlen, leftLen, rightLen)
        
        return sumlen, down, up
