71. Binary Tree Zigzag Level Order Traversal 

有点难，关键在于1.用index记录行数，2.在奇数行时，queue的处理依然相同（否则会出现只有半行倒序的情况），
但是在将node.val放入list时候，用insert倒着放

"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""
from collections import deque
class Solution:
    """
    @param root: A Tree
    @return: A list of lists of integer include the zigzag level order traversal of its nodes' values.
    """
    def zigzagLevelOrder(self, root):
        # write your code here
        result = []
        if not root:
            return []
            
        queue = deque([root])
        index = 0
        
        while queue:
            size = len(queue)
            level = []
            for i in range(size):
                node = queue.popleft()
                if index % 2 == 0:
                    level.append(node.val)
                else:
                    level.insert(0, node.val)
                    
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
                    
            index += 1
            result.append(level)
        
        return result
