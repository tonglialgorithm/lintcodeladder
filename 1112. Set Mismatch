1112. Set Mismatch
The set S originally contains numbers from 1 to n. But unfortunately, due to 
the data error, one of the numbers in the set got duplicated to another number 
in the set, which results in repetition of one number and loss of another number.

Given an array nums representing the data status of this set after the error. 
Your task is to firstly find the number occurs twice and then find the number 
that is missing. Return them in the form of an array.

Example
Input: nums = [1,2,2,4]
Output: [2,3]


用现在的和减去原来的和得到x - y,
用现在的平方和减去原来的平方和，再除以x - y, 得到x + y
class Solution:
    """
    @param nums: an array
    @return: the number occurs twice and the number that is missing
    """
    def findErrorNums(self, nums):
        # Write your code here
        if not nums or len(nums) < 2:
            return []
        n = len(nums)
        sumN = (1 + n) * n / 2
        sumNums = sum(nums)
        diff = sumNums - sumN 
        
        total = (sum(x*x for x in nums) - n * (n + 1) * (2*n + 1) / 6) / diff
        
        x = (total + diff) / 2
        y = (total - diff) / 2
        
        return [x, y]
