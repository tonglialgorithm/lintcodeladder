4. Ugly Number II
Ugly number is a number that only have factors 2, 3 and 5.
Design an algorithm to find the nth ugly number. The first 10 ugly numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12...
Example
If n=9, return 10.
Challenge
O(n log n) or O(n) time.


class Solution:
    """
    @param n: An integer
    @return: the nth prime number as description.
    """
    def nthUglyNumber(self, n):
        # write your code here
        if n <= 1:
            return n
            
        from heapq import heappop, heappush
        hq = [1]
        inQ = set()
        primes = [2, 3, 5]
        
        for i in range(n):
            number = heappop(hq)
            for j in range(len(primes)):
                if primes[j] * number not in inQ:
                    heappush(hq, primes[j] * number)
                    inQ.add(primes[j] * number)
                    
        return number
