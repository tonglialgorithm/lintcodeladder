425. Letter Combinations of a Phone Number
Given a digit string excluded 01, return all possible letter combinations that the number could represent.


用了permutation同样的模板
class Solution:
    """
    @param digits: A digital string
    @return: all posible letter combinations
    """
    def letterCombinations(self, digits):
        # write your code here
        res = []
        if digits == None or digits == '':
            return res
            
        dict = {'2':['a','b','c'],
                '3':['d','e','f'],
                '4':['g','h','i'],
                '5':['j','k','l'],
                '6':['m','n','o'],
                '7':['p','q','r','s'],
                '8':['t','u','v'],
                '9':['w','x','y','z']
                }
        
        self.dfs(dict, '', digits, res)
        return res
    
    def dfs(self, dict, string, digits, res):
        if len(string) == len(digits):
            res.append(string)
            return
        for letter in dict[digits[len(string)]]:
            string += letter
            self.dfs(dict, string, digits, res)
            string = string[:-1]    // 相当于list的pop()
