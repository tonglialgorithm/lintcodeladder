97. Maximum Depth of Binary Tree

**遍历法：（根据java版本改写）
"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""

class Solution:
    """
    @param root: The root of binary tree.
    @return: An integer
    """
    def maxDepth(self, root):
        # write your code here
        self.depth = 0
        self.traverse(root, 1)
        return self.depth  # 这里，如果整个树直接就是没有，这里直接返回0
    
    def traverse(self, root, curdepth):
        if not root:
            return            # 这个是走到底没有node之后的最终条件，所以是return而不是return 0
        self.depth = max(self.depth, curdepth)
        self.traverse(root.left, curdepth + 1)
        self.traverse(root.right, curdepth + 1)

**分治法：
class Solution:
    """
    @param root: The root of binary tree.
    @return: An integer
    """
    def maxDepth(self, root):
        # write your code here
        if not root:
            return 0
        left = self.maxDepth(root.left)
        right = self.maxDepth(root.right)
        return max(left, right) + 1
        
