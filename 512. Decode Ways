512. Decode Ways
A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it.

Example
Given encoded message 12, it could be decoded as AB (1 2) or L (12).
The number of ways decoding 12 is 2.

class Solution:
    """
    @param s: a string,  encoded message
    @return: an integer, the number of ways decoding
    """
    def numDecodings(self, s):
        # write your code here
        n = len(s)
        if n == 0:
            return 0
            
        f = [0 for i in range(n + 1)]
        f[0] = 1
        for i in range(1, n + 1):
            if s[i - 1] != '0':
                f[i] = f[i] + f[i - 1]
            
            if i >= 2 and (s[i - 2] == '1' or (s[i - 2] == '2' and int(s[i - 1]) <= 6)):
                f[i] = f[i] + f[i - 2]
        
        return f[n]
